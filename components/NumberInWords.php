<?php
/**
 * Перевод девяти-значного числа, с двумя знаками после запятой
 * в написание прописью на русском языке.
 * 
 * @author - sergmoro1@ya.ru
 * @license - GPL
 */
class NumberInWords {

	// Единицы
	private static $n1 = array(' ', 'один', 'два', 'три', 'четыре', 
		'пять', 'шесть', 'семь', 'восемь', 'девять');
	// 1 и 2 тысячи
	private static $n01 = array(' ', 'одна', 'две');
	// Десятки
	private static $n10 = array('', 'десять', 'двадцать', 'тридцать', 'сорок', 
		'пятьдесят', 'шестьдесят', 'семьдесят', 'восемьдесят', 'девяносто');
	// Десятки от 11 до 19 - прибавляется 'надцать'
	private static $n11 = array('', 'один', 'две', 'три', 'четыр', 
		'пят', 'шест', 'сем', 'восем', 'девят');
	// Сотни
	private static $n100 = array('', 'сто', 'двести', 'триста', 'четыреста', 
		'пятьсот', 'шестьсот', 'семьсот', 'восемьсот', 'девятьсот');
	// Тысячи
	private static $th = array('тысяч', 'тысяча', 'тысячи', 'тысячи', 'тысячи', 
		'тысяч', 'тысяч', 'тысяч', 'тысяч', 'тысяч');
	// Миллионы
	private static $mi = array('миллионов', 'миллион', 'миллиона', 'миллиона', 'миллиона', 
		'миллионов', 'миллионов', 'миллионов', 'миллионов', 'миллионов');

	/*
	 * Переводит трёхзначное, целое число в строку.
	 * $r - целое. трехзначное
	 *
	 */
	private static function n3($r, $switch12) 
	{
		// выделение сотен
		$r3 = intval($r / 100);
		// десятков
		$r2 = $r - $r3 * 100;
		$r2 = intval($r2 / 10);
		// единиц
		$r1 = $r - $r3 * 100 - $r2 * 10;

		if(($r2 == 1) && ($r1 > 0))
		{
			// последние 2 цифры - число от 11 до 19
			$n3 = self::$n100[$r3] . ' ' . self::$n11[$r1] . 'надцать';
		} else {
			// все остальные числа
			if(($r1 == 1) || ($r1 == 2))
				$n3 = self::$n100[$r3] . ' ' . self::$n10[$r2] . ' ' . 
					($switch12 ? self::$n01[$r1] : self::$n1[$r1]);
			else
				$n3 = self::$n100[$r3] . ' ' . self::$n10[$r2] . ' ' . self::$n1[$r1];
		}
		
		return trim($n3);
	}

	/* 
	 * Перевод девятизначного числа с двумя знаками после запятой
	 * в символьную строку.
	 * $d - number
	 */
	public static function convert($d)
	{
		$r = intval($d + 0.001);
		$s = '';
		// миллионы
		$r3 = intval($r / 1000000);
		// выделение единиц для определения "хвоста"
		if($r3 > 0)
		{
			$r0 = $r3 - intval($r3 / 10) * 10;
			$r00 = $r3 - intval($r3 / 100) * 100;
			if($r00 > 10 && $r00 < 20)
				$s = self::n3($r3, false) . ' миллионов';
			else
				$s = self::n3($r3, false) . ' ' . self::$mi[$r0];
		}
		// тысячи
		$r2 = intval(($r - $r3 * 1000000) / 1000);
		// выделение единиц для определения "хвоста"
		if($r2 > 0)
		{
			if(($r2 == 1) || ($r2 == 2))
				// специальная обработка
				$s .= ' ' . self::$n01[$r2] . ' ' . self::$th[$r2];
			else
			{
				$r0 = $r2 - intval($r2 / 10) * 10;
				$r00 = $r2 - intval($r2 / 100) * 100;
				if($r00 > 10 && $r00 < 20)
					$s .= ' ' . self::n3($r2, true) . ' тысяч';
				else
					$s .= ' ' . self::n3($r2, true) . ' ' . self::$th[$r0];
			}
		}
		// сотни
		$r1 = intval($r - $r3 * 1000000 - $r2 * 1000);
		// выделение единиц для определения "хвоста"
		$r0 = $r1 - intval($r1 / 10) * 10;
		$s .= ' ' . self::n3($r1, false) . ' руб.';

		$s = $r <= 0 ? 'ноль руб.' : trim($s);
		
		// (D+0.001) - исправление ошибки представления копеек
		// в экспоненциальном формате
		$r0 = intval(100 * ($d + 0.001) - 100 * intval($d + 0.001));
		if($r0 < 10)
			// добавить ведущий пробел
			$s .= ' 0' . $r0 . ' коп.';
		else
			$s .= ' ' . $r0 . ' коп.';
		
		// первая буква д.б. заглавной
		mb_internal_encoding("UTF-8");
		$S1 = mb_strtoupper(mb_substr($s, 0, 1));
		return $S1 . mb_substr($s, 1);
	}
}
